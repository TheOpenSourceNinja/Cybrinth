//Cybrinth created by James Dearing, copyright 2012-2014 and licensed under the GNU AGPL (see the file COPYING)
//Single-line comments like this are allowed, and must begin with two slashes (//). Anything before the slashes is considered not part of a comment.
//Action and control must be separated by a tab character, not spaces.
//NOT TRUE RIGHT NOW: Any action not specified here will use its default value. The same goes for things specified in invalid ways (i.e. putting letters where numbers should be).
//Actions must be spelled exactly as they are in this original file, but are not case-sensitive. "Screenshot" is the same as "SCREENshoT" but not "screeeeen    shot"
//Controls can be assigned to multiple actions. Actions can be assigned to multiple controls. One assignment per line.
//Keyboard controls must use integer keycodes.

//Keyboard controls
Menu	Key 27 //The 'Esc' key opens/closes the menu.
Menu	Key 18 //Some keyboards have a separate menu key, so we'll let people use that too.
Menu	Key 19 //The 'Pause/Break' key should pause the game.
screenshot	Key 42 //Print screen.
SCREENSHOT	Key 80 //Not all computers have a print screen key, so let's accept the P key too.
ScreenShot	Key 44 //I've never seen a keyboard with this key, but apparently they exist.
//Note that the action can either be spelled out ("down") or abbreviated ("d")
//For controls that affect a specific player, start with "Player", then a space, then the player number, another space, then the action, then a tab, and finally the control.
//Player Number Action	Keycode
Player 0 Up	Key 38 //Arrow key up
Player 0 Down	Key 40 //Arrow key down
Player 0 Left	Key 37 //Arrow key left
Player 0 Right	Key 39
Player 1 U	Key 87
Player 1 D	Key 83
Player 1 L	Key 65
Player 1 R	Key 68
Player 2 U	Key 84
Player 2 D	Key 71
Player 2 L	Key 70
Player 2 R	Key 72
Player 3 U	Key 73
Player 3 D	Key 75
Player 3 L	Key 74
Player 3 R	Key 76

//Mouse controls
VolumeUp	MouseWheelUp
VolumeDown	MouseWHEELdown
// The next two lines are examples of using the mouse to control a player
//Player 0 L	MouseLeftDown //"MouseLeftDown" means the left mouse button pushed down
//Player 0 R	MouseMoved

//controller controls
Enable controller	true //Default: false. If enabled, the program will try to detect and use a controller
//controller number	0 //Default: 0. controllers are numbered starting with 0.
Player 0 Up	controller 0 Button 4
Player 0 Down	controller 0 Button 2
Player 0 Left	controller 0 Button 1
Player 0 Right	controller 0 Button 3
Menu	controller 0 Button 9
SCREENSHOT	controller 0 Button 0
VolumeUp	controller 0 Button 6
volumeUP	controller 0 Button 8
Volumedown	controller 0 button 5
volumedown	controller 0 button 7
Player 0 Up	controller 0 joystick Y Decrease
Player 0 Down	controller 0 joystick Y Increase
Player 0 RIGHT	controller 0 joystick X Increase
Player 0 LEFT	controller 0 joystick X Decrease
Player 0 Up	controller 0 Joystick V Decrease
Player 0 Down	controller 0 Joystick V Increase
Player 0 Left	controller 0 Joystick U Decrease
Player 0 Right	controller 0 Joystick U Increase
